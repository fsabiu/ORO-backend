-- =============================================================================
-- AION:OPS - ORACLE SPATIAL DATABASE SCHEMA (v2)
-- =============================================================================

-- Clean up previous installations (optional, for development)
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE NOTIFICATIONS';
  EXECUTE IMMEDIATE 'DROP TABLE DETECTIONS';
  EXECUTE IMMEDIATE 'DROP TABLE RULESETS';
  EXECUTE IMMEDIATE 'DROP TABLE REPORTS';
EXCEPTION
  WHEN OTHERS THEN
    IF SQLCODE != -942 THEN
      RAISE;
    END IF;
END;
/

-- Clear old metadata entries to prevent errors on re-run
DELETE FROM USER_SDO_GEOM_METADATA WHERE TABLE_NAME IN ('REPORTS', 'RULESETS', 'DETECTIONS');
COMMIT;


-- =============================================================================
-- 1. TABLE CREATION
-- =============================================================================

-- REPORTS: Stores metadata for each processing job and its results.
CREATE TABLE REPORTS (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(255 CHAR) NOT NULL, -- User-defined name for the report
    timestamp TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    bucket_img_path VARCHAR2(512 CHAR) NOT NULL,
    
    -- The full geographic extent of the entire GeoTIFF file.
    image_footprint SDO_GEOMETRY
);

-- RULESETS: Defines user-created rules for generating notifications.
CREATE TABLE RULESETS (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(255 CHAR) NOT NULL,
    -- The geographic area that triggers this rule if a detection falls within it.
    area_of_interest SDO_GEOMETRY NOT NULL,
    author_id INTEGER -- Foreign key to your USERS table
);

-- DETECTIONS: Stores every individual object found during processing.
CREATE TABLE DETECTIONS (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    report_id INTEGER NOT NULL REFERENCES REPORTS(id) ON DELETE CASCADE,
    class_name VARCHAR2(100 CHAR),
    confidence NUMBER(5, 4),
    
    -- The bounding box in PIXEL coordinates relative to the original, full-sized image.
    pixel_bbox_x1 INTEGER,
    pixel_bbox_y1 INTEGER,
    pixel_bbox_x2 INTEGER,
    pixel_bbox_y2 INTEGER,

    -- The geographic footprint (polygon) of the detection's bounding box.
    footprint SDO_GEOMETRY
);

-- NOTIFICATIONS: Records triggered events when a detection matches a ruleset.
CREATE TABLE NOTIFICATIONS (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    status VARCHAR2(50 CHAR) DEFAULT 'new',
    ruleset_id INTEGER NOT NULL REFERENCES RULESETS(id),
    detection_id INTEGER NOT NULL REFERENCES DETECTIONS(id),
    priority INTEGER,
    summary CLOB,
    timestamp TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


-- =============================================================================
-- 2. SPATIAL METADATA REGISTRATION (MANDATORY)
-- Tells Oracle how to interpret and index the SDO_GEOMETRY columns.
-- SRID 4326 corresponds to WGS 84 (standard latitude/longitude).
-- =============================================================================

INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID)
VALUES ('REPORTS', 'image_footprint', SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', -180, 180, 0.005), SDO_DIM_ELEMENT('Y', -90, 90, 0.005)), 4326);

INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID)
VALUES ('RULESETS', 'area_of_interest', SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', -180, 180, 0.005), SDO_DIM_ELEMENT('Y', -90, 90, 0.005)), 4326);

INSERT INTO USER_SDO_GEOM_METADATA (TABLE_NAME, COLUMN_NAME, DIMINFO, SRID)
VALUES ('DETECTIONS', 'footprint', SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', -180, 180, 0.005), SDO_DIM_ELEMENT('Y', -90, 90, 0.005)), 4326);

COMMIT;


-- =============================================================================
-- 3. INDEX CREATION (CRITICAL FOR PERFORMANCE)
-- =============================================================================

-- Spatial indexes for fast geographic queries
CREATE INDEX REPORTS_IMAGE_FOOTPRINT_IDX ON REPORTS(image_footprint) INDEXTYPE IS MDSYS.SPATIAL_INDEX_V2;
CREATE INDEX RULESETS_AOI_IDX ON RULESETS(area_of_interest) INDEXTYPE IS MDSYS.SPATIAL_INDEX_V2;
CREATE INDEX DETECTIONS_FOOTPRINT_IDX ON DETECTIONS(footprint) INDEXTYPE IS MDSYS.SPATIAL_INDEX_V2;

-- Standard B-Tree index for fast joins between detections and reports
CREATE INDEX DETECTIONS_REPORT_ID_FK_IDX ON DETECTIONS(report_id);

-- =============================================================================
-- END OF SCRIPT
-- =============================================================================